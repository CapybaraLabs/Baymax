pluginManagement {
	repositories {
		gradlePluginPortal()
		mavenCentral()
	}
}

rootProject.name = 'baymax'

ext {
	//@formatter:off

	//plugin versions
	gradleGitVersion        = '[2.4, 3.0['
	springBootVersion       = '[2.7.0, 2.8['
	sonarqubeVersion        = '3.+'
	versionsVersion         = '0.+'

	jdaVersion              = '[4.4.0_351, 4.5['
	sentryVersion           = '[5.0.1, 6.0['
	annotationsVersion      = '[0.0.2, 0.1['
	emojiVersion            = '[5.1.1, 6.0['
	guavaVersion            = '[31.0.1-jre, 32['

	//@formatter:on
}

dependencyResolutionManagement {

	versionCatalogs {
		libs {
			version("spring-boot", "$springBootVersion")

			plugin("gitprops", "com.gorylenko.gradle-git-properties").version("$gradleGitVersion")
			plugin("spring", "org.springframework.boot").version("$springBootVersion")
			plugin("sonar", "org.sonarqube").version("$sonarqubeVersion")
			plugin("versions", "com.github.ben-manes.versions").version("$versionsVersion")

			library("spring-boot-bom", "org.springframework.boot", "spring-boot-dependencies").versionRef("spring-boot")
			library("jda", "net.dv8tion:JDA:$jdaVersion")
			library("logback", "ch.qos.logback", "logback-classic").withoutVersion()
			library("sentry", "io.sentry:sentry-logback:$sentryVersion")
			library("annotations", "space.npstr:annotations:$annotationsVersion")
			library("snakeyaml", "org.yaml", "snakeyaml").withoutVersion()
			library("caffeine", "com.github.ben-manes.caffeine", "caffeine").withoutVersion()
			library("emojis", "com.vdurmont:emoji-java:$emojiVersion")
			library("guava", "com.google.guava:guava:$guavaVersion")
			library("sqlite", "org.xerial", "sqlite-jdbc").withoutVersion()
			library("flyway", "org.flywaydb", "flyway-core").withoutVersion()

			library("spring-boot-starter", "org.springframework.boot", "spring-boot-starter").withoutVersion()

			library("junit-api", "org.junit.jupiter", "junit-jupiter-api").withoutVersion()
			library("junit-engine", "org.junit.jupiter", "junit-jupiter-engine").withoutVersion()
		}
	}
}
